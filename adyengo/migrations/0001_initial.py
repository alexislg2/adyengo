# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-03-29 10:10
from __future__ import unicode_literals

import adyengo.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(blank=True, max_length=45, null=True)),
                ('live', models.BooleanField()),
                ('event_code', models.CharField(blank=True, max_length=50, null=True)),
                ('psp_reference', models.CharField(blank=True, max_length=150, null=True)),
                ('original_reference', models.CharField(blank=True, max_length=150, null=True)),
                ('merchant_reference', models.CharField(blank=True, max_length=128, null=True)),
                ('merchant_account_code', models.CharField(blank=True, max_length=150, null=True)),
                ('event_date', models.DateTimeField(blank=True, null=True)),
                ('success', models.BooleanField()),
                ('payment_method', models.CharField(blank=True, choices=[(b'bcmc', b'Bancontact card'), (b'giropay', b'GiroPay'), (b'bankTransfer_NL', b'Dutch Banktransfer'), (b'ebanking_FI', b'Finnish E-Banking'), (b'dotpay', b'Dotpay'), (b'directdebit_NL', b'Direct Debit (Netherlands)'), (b'paypal', b'PayPal'), (b'mc', b'Master Card'), (b'discover', b'Discover'), (b'amex', b'Amex'), (b'ideal', b'iDEAL'), (b'bankTransfer_IBAN', b'International Bank Transfer (IBAN)'), (b'bankTransfer_DE', b'German Banktransfer'), (b'diners', b'Diners Club'), (b'maestro', b'Maestro'), (b'directEbanking', b'SofortUberweisung'), (b'bankTransfer', b'All banktransfers'), (b'elv', b'ELV'), (b'visa', b'Visa'), (b'card', b'All debit and credit cards'), (b'sepadirectdebit', b'SEPA Direct Debit')], max_length=50, null=True)),
                ('operations', models.CharField(blank=True, max_length=100, null=True)),
                ('reason', models.CharField(blank=True, max_length=250, null=True)),
                ('payment_amount', models.PositiveSmallIntegerField()),
                ('currency_code', models.CharField(choices=[(b'EUR', b'Euro')], default=b'EUR', max_length=3)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-creation_time',),
            },
        ),
        migrations.CreateModel(
            name='RecurringContract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recurring_detail_reference', models.CharField(blank=True, max_length=150)),
                ('shopper_reference', models.CharField(max_length=80)),
                ('contract_type', models.CharField(max_length=50)),
                ('payment_method_type', models.CharField(max_length=15)),
                ('variant', models.CharField(blank=True, max_length=50)),
                ('creation_date', models.DateTimeField(blank=True)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-creation_time',),
            },
        ),
        migrations.CreateModel(
            name='RecurringContractDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100)),
                ('value', models.CharField(blank=True, max_length=250)),
                ('recurring_contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='adyengo.RecurringContract')),
            ],
        ),
        migrations.CreateModel(
            name='RecurringPaymentResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('psp_reference', models.BigIntegerField()),
                ('result_code', models.CharField(choices=[(b'Authorised', b'Authorised'), (b'Received', b'Received'), (b'Error', b'Error'), (b'Refused', b'Refused')], max_length=30)),
                ('auth_code', models.PositiveIntegerField(null=True)),
                ('refusal_reason', models.CharField(blank=True, max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_type', models.CharField(choices=[(b'hpp_recurring', b'HPP Recurring'), (b'hpp_regular', b'HPP Regular'), (b'api_recurring', b'API Recurring')], max_length=25)),
                ('merchant_reference', models.CharField(max_length=80, unique=True)),
                ('payment_amount', models.PositiveSmallIntegerField()),
                ('currency_code', models.CharField(choices=[(b'EUR', b'Euro')], default=b'EUR', max_length=3)),
                ('ship_before_date', models.DateTimeField(default=adyengo.models.tomorrow, null=True)),
                ('skin_code', models.CharField(default=b'Fa3EedeE', max_length=10)),
                ('shopper_locale', models.CharField(blank=True, choices=[(b'de_DE', b'German (Germany)'), (b'nl_NL', b'Dutch (Holland)'), (b'fr_BE', b'French (Belgium)'), (b'en_GB', b'English (United Kingdom)'), (b'nl_BE', b'Dutch (Belgium)')], default=b'fr', max_length=5)),
                ('order_data', models.TextField(blank=True)),
                ('session_validity', models.DateTimeField(default=adyengo.models.tomorrow, null=True)),
                ('merchant_return_data', models.CharField(max_length=128)),
                ('country_code', models.CharField(choices=[(b'BE', b'Belgium'), (b'DE', b'Germany'), (b'NL', b'Netherlands'), (b'GB', b'United Kingdom')], max_length=2)),
                ('shopper_email', models.EmailField(blank=True, max_length=254)),
                ('shopper_reference', models.CharField(blank=True, max_length=80)),
                ('shopper_ip', models.CharField(blank=True, max_length=45)),
                ('shopper_statement', models.CharField(blank=True, max_length=135)),
                ('fraud_offset', models.PositiveIntegerField(null=True)),
                ('recurring_contract', models.CharField(blank=True, choices=[(b'RECURRING', b'Recurring'), (b'ONECLICK', b'One click'), (b'RECURRING,ONECLICK', b'Recurring and One click (user chooses)')], max_length=50)),
                ('recurring_detail_reference', models.CharField(blank=True, max_length=80)),
                ('res_url', models.CharField(blank=True, default=None, max_length=2000, null=True)),
                ('page_type', models.CharField(choices=[(b'skip', b'Skip'), (b'single', b'Single'), (b'multiple', b'Multiple')], default=b'multiple', max_length=15)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-creation_time',),
            },
        ),
        migrations.CreateModel(
            name='SessionAllowedPaymentMethods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(choices=[(b'bcmc', b'Bancontact card'), (b'giropay', b'GiroPay'), (b'bankTransfer_NL', b'Dutch Banktransfer'), (b'ebanking_FI', b'Finnish E-Banking'), (b'dotpay', b'Dotpay'), (b'directdebit_NL', b'Direct Debit (Netherlands)'), (b'paypal', b'PayPal'), (b'mc', b'Master Card'), (b'discover', b'Discover'), (b'amex', b'Amex'), (b'ideal', b'iDEAL'), (b'bankTransfer_IBAN', b'International Bank Transfer (IBAN)'), (b'bankTransfer_DE', b'German Banktransfer'), (b'diners', b'Diners Club'), (b'maestro', b'Maestro'), (b'directEbanking', b'SofortUberweisung'), (b'bankTransfer', b'All banktransfers'), (b'elv', b'ELV'), (b'visa', b'Visa'), (b'card', b'All debit and credit cards'), (b'sepadirectdebit', b'SEPA Direct Debit')], max_length=50)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allowed_payment_methods', to='adyengo.Session')),
            ],
        ),
        migrations.CreateModel(
            name='SessionBlockedPaymentMethods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(choices=[(b'bcmc', b'Bancontact card'), (b'giropay', b'GiroPay'), (b'bankTransfer_NL', b'Dutch Banktransfer'), (b'ebanking_FI', b'Finnish E-Banking'), (b'dotpay', b'Dotpay'), (b'directdebit_NL', b'Direct Debit (Netherlands)'), (b'paypal', b'PayPal'), (b'mc', b'Master Card'), (b'discover', b'Discover'), (b'amex', b'Amex'), (b'ideal', b'iDEAL'), (b'bankTransfer_IBAN', b'International Bank Transfer (IBAN)'), (b'bankTransfer_DE', b'German Banktransfer'), (b'diners', b'Diners Club'), (b'maestro', b'Maestro'), (b'directEbanking', b'SofortUberweisung'), (b'bankTransfer', b'All banktransfers'), (b'elv', b'ELV'), (b'visa', b'Visa'), (b'card', b'All debit and credit cards'), (b'sepadirectdebit', b'SEPA Direct Debit')], max_length=50)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_payment_methods', to='adyengo.Session')),
            ],
        ),
        migrations.AddField(
            model_name='recurringpaymentresult',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recurring_payment_results', to='adyengo.Session'),
        ),
        migrations.AlterUniqueTogether(
            name='recurringcontract',
            unique_together=set([('recurring_detail_reference', 'shopper_reference')]),
        ),
        migrations.AddField(
            model_name='notification',
            name='session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adyengo.Session'),
        ),
        migrations.AlterUniqueTogether(
            name='notification',
            unique_together=set([('live', 'merchant_account_code', 'psp_reference', 'event_code', 'success')]),
        ),
    ]
